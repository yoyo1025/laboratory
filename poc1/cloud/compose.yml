version: "3.9"
services:
  cloud-api:
    build: .
    container_name: "cloud_api_poc1"
    volumes:
      - ./app:/app
    ports:
      - "8100:8100"
    depends_on:
      cloud-mysql:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      MINIO_ENDPOINT: "${MINIO_ENDPOINT:-cloud-minio:9100}"
      MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY:-minio_root}"
      MINIO_SECRET_KEY: "${MINIO_SECRET_KEY:-minio_password}"
    networks:
      cloud-network:
        ipv4_address: 172.16.239.10
  cloud-mysql:
    image: "mysql:8.0"
    container_name: "cloud_mysql_poc1"
    environment:
      MYSQL_DATABASE: "sample_db"
      MYSQL_USER: "sample_user"
      MYSQL_PASSWORD: "sample_password"
      MYSQL_ROOT_PASSWORD: "p@assw0rd"
      MYSQL_ROOT_HOST: "%"
      TZ: "Asia/Tokyo"
    volumes:
      - cloud_mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3366:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      cloud-network: null
  cloud-phpmyadmin:
    image: "phpmyadmin/phpmyadmin"
    container_name: "cloud_phpmyadmin_poc1"
    environment:
      PMA_HOST: "cloud-mysql"
      PMA_USER: "root"
      PMA_PASSWORD: "p@assw0rd"
    depends_on:
      - cloud-mysql
    ports:
      - "8092:80"
    networks:
      cloud-network: null
  cloud-minio:
    container_name: "cloud_minio_poc1"
    image: "minio/minio:RELEASE.2025-07-23T15-54-02Z"
    ports:
      - "9100:9100"  # API
      - "9101:9101"  # Console
    env_file:
      - ./.env
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER:-minio_root}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD:-minio_password}"
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
      MINIO_NOTIFY_WEBHOOK_ENABLE_FASTAPI: "${MINIO_NOTIFY_WEBHOOK_ENABLE_FASTAPI:-on}"
      MINIO_NOTIFY_WEBHOOK_ENDPOINT_FASTAPI: "${MINIO_NOTIFY_WEBHOOK_ENDPOINT_FASTAPI:-http://cloud-api:8100/minio/webhook}"
    command: server --address ":9100" --console-address ":9101" /export
    volumes:
      - ./docker/minio/data:/export
    networks:
      cloud-network: null
  cloud-mc:
    image: "minio/mc:RELEASE.2025-07-21T05-28-08Z"
    depends_on: [cloud-minio, cloud-api]
    entrypoint: ["/bin/sh", "-lc"]
    command: |
      "mc alias set cloud http://cloud-minio:9100 minio_root minio_password && \
      tail -f /dev/null"
    networks:
      cloud-network: null
  cloud-mysql-exporter:
    image: prom/mysqld-exporter:v0.18.0
    container_name: cloud_mysql_exporter
    volumes:
      - ./mysql/secrets/.mysql_exporter.cnf:/etc/.mysqld_exporter.cnf:ro
    command:
      - --config.my-cnf=/etc/.mysqld_exporter.cnf
    depends_on:
      - cloud-mysql
    ports:
      - "9204:9104"
    networks:
      cloud-network: null
  cloud-prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: cloud-prometheus
    ports:
      - 19090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      cloud-network:
        ipv4_address: 172.16.239.11
  cloud-grafana:
    image: grafana/grafana
    container_name: cloud-grafana
    restart: unless-stopped
    depends_on:
      - cloud-prometheus
    ports:
      - 13000:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - ./grafana/config.monitoring
    networks:
      cloud-network:
        ipv4_address: 172.16.239.12
volumes:
  cloud_mysql_data:

networks:
  cloud-network:
    name: cloud-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.239.0/24
